{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "App Nizi API",
    "description" : "The API for the Nizi-app",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/McSmoker/NierZiektenConcept/1.0.0/",
    "description" : "Anne SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://virtserver.swaggerhub.com/jaccoklouwer/App_Nizi/1.0.0",
    "description" : "Jacco SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://virtserver.swaggerhub.com/martinstork/AppNiZi/1.0.0",
    "description" : "Martin SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://virtserver.swaggerhub.com/KEVIN73/app-nizi_api/1.0.0",
    "description" : "Kevin SwaggerHub API Auto Mocking"
  } ],
  "paths" : {
    "/patients" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns patients",
        "description" : "Retrieve an array of patients.",
        "operationId" : "GetPatients",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/patients"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "admin" ]
        } ]
      },
      "post" : {
        "tags" : [ "patients" ],
        "summary" : "Creates a patient",
        "description" : "Create a new patient.",
        "operationId" : "PostPatient",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/patient"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "(200) OK!",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/patient"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          }
        },
        "security" : [ {
          "oAuth2" : [ "admin" ]
        } ]
      }
    },
    "/patients/me" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns users's patient",
        "description" : "Retrieve the current user's patient data.",
        "operationId" : "GetMyPatient",
        "responses" : {
          "200" : {
            "description" : "(200) Success.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/patient"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient" ]
        } ]
      }
    },
    "/patients/{patientId}" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns patient with id",
        "description" : "Retrieve an existing patient.",
        "operationId" : "GetPatientByPatientId",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/patient"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      },
      "delete" : {
        "tags" : [ "patients" ],
        "summary" : "Deletes a patient",
        "description" : "Delete an existing patient.",
        "operationId" : "DeletePatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(200) Removed!"
          }
        },
        "security" : [ {
          "oAuth2" : [ "admin" ]
        } ]
      },
      "patch" : {
        "tags" : [ "patients" ],
        "summary" : "Patches a patient",
        "description" : "Patch an existing patient.",
        "operationId" : "PatchPatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "(200) Updated!"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/patients/me/diary/today" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns the user's diary from today",
        "description" : "Retrieve the user-patient's diary for today.",
        "operationId" : "GetDiaryForToday",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/diary"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient" ]
        } ]
      }
    },
    "/patients/me/diary/{date}" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns the user's diary for a given date",
        "description" : "Retrieve the user-patient's diary for a given date.",
        "operationId" : "GetDiaryForDate",
        "parameters" : [ {
          "name" : "date",
          "in" : "path",
          "description" : "A date value.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "2019-08-30"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/diary"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient" ]
        } ]
      }
    },
    "/patients/{patientId}/diary/today" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns a patient's diary from today",
        "description" : "Retrieve a given patient's diary for today.",
        "operationId" : "GetDiaryForTodayByPatientId",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/diary"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "admin" ]
        } ]
      }
    },
    "/patients/{patientId}/diary/{date}" : {
      "get" : {
        "tags" : [ "patients" ],
        "summary" : "Returns a patient's diary for a given date",
        "description" : "Retrieve a given patient's diary for a given date.",
        "operationId" : "GetDiaryForDateByPatientId",
        "parameters" : [ {
          "name" : "date",
          "in" : "path",
          "description" : "A date value.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "2019-08-30"
          }
        }, {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/diary"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "(400) Bad request. Data malformed?"
          },
          "401" : {
            "description" : "(401) Not authorized."
          },
          "404" : {
            "description" : "(404) Resource not found."
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/doctors/{doctorId}/patients" : {
      "get" : {
        "tags" : [ "doctors" ],
        "summary" : "Returns patient id's from a doctor",
        "description" : "Retrieve all patients listed under a given doctor.",
        "operationId" : "GetPatientsForDoctorId",
        "parameters" : [ {
          "name" : "doctorId",
          "in" : "path",
          "description" : "the id of the doctor",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ {
                    "name" : "John Doe",
                    "id" : 1
                  }, {
                    "name" : "Susan Smith",
                    "id" : 2
                  } ],
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AccountNameAndId"
                    }
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "401" : {
            "description" : "Not authorized to get patients"
          }
        },
        "security" : [ {
          "oAuth2" : [ "admin" ]
        } ]
      }
    },
    "/doctor/patients" : {
      "get" : {
        "tags" : [ "doctors" ],
        "summary" : "Returns patient id's from doctor",
        "description" : "Retrieves all patients for logged-in doctor.",
        "operationId" : "GetAllPatientsForDoctor",
        "responses" : {
          "200" : {
            "description" : "Succesfully retrieved patients",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "example" : [ {
                    "name" : "John Doe",
                    "id" : 1
                  }, {
                    "name" : "Susan Smith",
                    "id" : 2
                  } ],
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AccountNameAndId"
                    }
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "401" : {
            "description" : "Not authorized to get patients"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/doctor/patients/{patientId}" : {
      "get" : {
        "tags" : [ "doctors" ],
        "summary" : "Returns a patient",
        "description" : "Retrieves specific patient for logged-in doctor.",
        "operationId" : "GetPatientByPatientIdForLoggedInDoctor",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesfully retrieved patient",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/patient"
                }
              }
            }
          },
          "401" : {
            "description" : "Not authorized to get patient"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/doctor/patients/{patientId}/periodDiary" : {
      "get" : {
        "tags" : [ "doctors" ],
        "summary" : "Returns the perioddiary from a patient",
        "description" : "Retrieves the perioddiary for a patient for the logged-in doctor.",
        "operationId" : "GetperioddiaryForPatientId",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "the beginning of a period",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2019-08-30"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "the end of a period",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2019-09-30"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesfully retrieved patients",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/diary"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad input parameter"
          },
          "401" : {
            "description" : "Not authorized to get period-diary of patient"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/waterConsumption" : {
      "post" : {
        "tags" : [ "waterConsumption" ],
        "summary" : "Inserts the waterconsumption",
        "description" : "Insert the WaterConsumption.",
        "operationId" : "PostWaterConsumption",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/WaterConsumption"
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "you are unauthorized to do this"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient" ]
        } ]
      }
    },
    "/WaterConsumption/{patientId}" : {
      "get" : {
        "tags" : [ "waterConsumption" ],
        "summary" : "Returns the waterconsumption of a patient",
        "description" : "get the WaterConsumption of a patient.",
        "operationId" : "GetWaterConsumptionByPatientId",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "you are unauthorized to do this"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient", "doctor" ]
        } ]
      }
    },
    "/personaldietarymanagement/{DietId}" : {
      "delete" : {
        "tags" : [ "dietaryManagement" ],
        "summary" : "Deletes the diatarymanagement of a patient",
        "description" : "Deletes the dietarymanagement of a patient.",
        "operationId" : "DeleteMyDietaryManagement",
        "parameters" : [ {
          "name" : "DietId",
          "in" : "path",
          "description" : "the id of the diet",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "you are unauthorized to do this"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/dietaryManagement" : {
      "put" : {
        "tags" : [ "dietaryManagement" ],
        "summary" : "Edits the dietarymanagement of a patient",
        "description" : "Edits the dietarymanagement of a patient.",
        "operationId" : "PutDietaryManagement",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/dietarymanagment"
        },
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "you are unauthorized to do this"
          },
          "404" : {
            "description" : "this patient is not found"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/dietaryManagement/{patientId}" : {
      "get" : {
        "tags" : [ "dietaryManagement" ],
        "summary" : "Returns all nutrients of a patient",
        "description" : "Retrieves all dietarymanagment of the patient.",
        "operationId" : "GetAllDietaryManagementForPatient",
        "parameters" : [ {
          "name" : "patientId",
          "in" : "path",
          "description" : "The id of the patient",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Nutrient"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "401" : {
            "description" : "you are unauthorized to see these patients dietary manegment"
          },
          "403" : {
            "description" : "this is not your dietary management"
          },
          "404" : {
            "description" : "this patient is not found"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient", "doctor" ]
        } ]
      }
    },
    "/account/login" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Logs user in",
        "description" : "Logs user in.",
        "operationId" : "Login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "User login finished",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401" : {
            "description" : "not authorized to login? maybe you made a typo?"
          }
        }
      }
    },
    "/account/registerpatient" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Registers a patient",
        "description" : "Registers a new patient.",
        "operationId" : "Register",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "patient registered and ready to party"
          },
          "401" : {
            "description" : "not authorized to register a patient(are you logged in as a doctor?)"
          }
        },
        "security" : [ {
          "oAuth2" : [ "doctor" ]
        } ]
      }
    },
    "/account/registerDoctor" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Registers a doctor",
        "description" : "Registers a new doctor.",
        "operationId" : "RegisterDoctor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "doctor registered"
          },
          "401" : {
            "description" : "not authorized to register a doctor"
          }
        },
        "security" : [ {
          "oAuth2" : [ "admin" ]
        } ]
      }
    },
    "/account/updatepatient" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Sets a patient's password",
        "description" : "Sets the patient's new password.",
        "operationId" : "PutPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_3"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "patient updated"
          },
          "401" : {
            "description" : "not authorized to login"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient" ]
        } ]
      }
    },
    "/food" : {
      "get" : {
        "tags" : [ "food" ],
        "summary" : "Get the name and ID from the database",
        "description" : "Get method that returns a food name from the input of the user. This method can be called while the user types the name.",
        "operationId" : "GetFood",
        "parameters" : [ {
          "name" : "foodName",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/food"
                }
              }
            }
          },
          "400" : {
            "description" : "Failed",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "401" : {
            "description" : "No authorization"
          },
          "404" : {
            "description" : "No food item available"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient", "doctor" ]
        } ]
      },
      "post" : {
        "tags" : [ "food" ],
        "summary" : "Add amount of a food item to the diary",
        "description" : "The user can put an amount of food (in grams) in their diary.",
        "operationId" : "PostFoodItem",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Addfood"
        },
        "responses" : {
          "200" : {
            "description" : "Succesful"
          },
          "401" : {
            "description" : "No authorization"
          },
          "404" : {
            "description" : "Failed"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient" ]
        } ]
      },
      "delete" : {
        "tags" : [ "food" ],
        "summary" : "Delete a food item from the diary of the user",
        "description" : "Get method that returns a food name from the input of the user. This method can be called while the user types the name.",
        "operationId" : "DeleteFoodItem",
        "parameters" : [ {
          "name" : "foodConsumptionId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Succesful"
          },
          "401" : {
            "description" : "No authorization"
          },
          "404" : {
            "description" : "Failed"
          }
        },
        "security" : [ {
          "oAuth2" : [ "patient", "doctor" ]
        } ]
      }
    },
    "/test" : {
      "get" : {
        "tags" : [ "test" ],
        "summary" : "test call",
        "description" : "Calling this allows you to fetch the test data",
        "operationId" : "TestCall",
        "responses" : {
          "200" : {
            "description" : "the test data",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TestObject"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "weight" : {
        "required" : [ "amount", "unit" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "string",
            "example" : "83.50"
          },
          "unit" : {
            "type" : "string",
            "example" : "kg"
          }
        },
        "example" : {
          "amount" : "83.50",
          "unit" : "kg"
        }
      },
      "patient" : {
        "type" : "object",
        "properties" : {
          "patientId" : {
            "type" : "integer",
            "example" : 4334
          },
          "doctorId" : {
            "type" : "integer",
            "example" : 123
          },
          "birthdate" : {
            "type" : "string",
            "example" : "2019-08-30"
          },
          "weight" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/weight"
            }
          }
        },
        "example" : {
          "birthdate" : "2019-08-30",
          "patientId" : 4334,
          "doctorId" : 123,
          "weight" : [ {
            "amount" : "83.50",
            "unit" : "kg"
          }, {
            "amount" : "83.50",
            "unit" : "kg"
          } ]
        }
      },
      "patients" : {
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/patient"
            }
          },
          "nextId" : {
            "type" : "integer",
            "example" : 4005
          }
        },
        "example" : {
          "nextId" : 4005,
          "results" : [ {
            "birthdate" : "2019-08-30",
            "patientId" : 4334,
            "doctorId" : 123,
            "weight" : [ {
              "amount" : "83.50",
              "unit" : "kg"
            }, {
              "amount" : "83.50",
              "unit" : "kg"
            } ]
          }, {
            "birthdate" : "2019-08-30",
            "patientId" : 4334,
            "doctorId" : 123,
            "weight" : [ {
              "amount" : "83.50",
              "unit" : "kg"
            }, {
              "amount" : "83.50",
              "unit" : "kg"
            } ]
          } ]
        }
      },
      "diary" : {
        "required" : [ "patientId" ],
        "type" : "object",
        "properties" : {
          "diaryId" : {
            "type" : "integer",
            "example" : 4334
          },
          "patientId" : {
            "type" : "integer",
            "example" : 4334
          },
          "consumedfoods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/foodConsumption"
            }
          },
          "representingDate" : {
            "type" : "string",
            "example" : "2019-08-30"
          }
        },
        "example" : {
          "patientId" : 4334,
          "diaryId" : 4334,
          "consumedfoods" : [ {
            "date" : "date",
            "kcal" : "kcal",
            "sodium" : "sodium",
            "foodName" : "foodName",
            "amount" : "amount",
            "fiber" : "fiber",
            "calcium" : "calcium",
            "protein" : "protein",
            "food_id" : 0,
            "diary_id" : 6
          }, {
            "date" : "date",
            "kcal" : "kcal",
            "sodium" : "sodium",
            "foodName" : "foodName",
            "amount" : "amount",
            "fiber" : "fiber",
            "calcium" : "calcium",
            "protein" : "protein",
            "food_id" : 0,
            "diary_id" : 6
          } ],
          "representingDate" : "2019-08-30"
        }
      },
      "updatedDietmangement" : {
        "type" : "object",
        "properties" : {
          "DietId" : {
            "type" : "integer"
          },
          "Amount" : {
            "type" : "integer"
          },
          "patientId" : {
            "type" : "integer"
          },
          "doctorId" : {
            "type" : "integer"
          }
        }
      },
      "Nutrient" : {
        "type" : "object",
        "properties" : {
          "Name" : {
            "type" : "string"
          },
          "Amount" : {
            "type" : "integer"
          },
          "Active" : {
            "type" : "boolean"
          }
        },
        "example" : {
          "Active" : true,
          "Amount" : 0,
          "Name" : "Name"
        }
      },
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "TestObject" : {
        "required" : [ "description", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "description" : {
            "type" : "string",
            "example" : "This is object number X"
          }
        },
        "example" : {
          "description" : "This is object number X",
          "id" : 0
        }
      },
      "account" : {
        "required" : [ "account_id", "doctor_id", "email", "name", "password", "passwordSalt" ],
        "type" : "object",
        "properties" : {
          "account_id" : {
            "type" : "integer"
          },
          "patientId" : {
            "type" : "integer"
          },
          "doctor_id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "passwordSalt" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "AccountNameAndId" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "John Doe"
          },
          "accountId" : {
            "type" : "integer",
            "example" : 1
          }
        }
      },
      "doctor" : {
        "required" : [ "doctor_id", "location" ],
        "type" : "object",
        "properties" : {
          "account" : {
            "$ref" : "components/schema/Account"
          },
          "doctor_id" : {
            "type" : "integer"
          },
          "birthdate" : {
            "type" : "integer"
          }
        }
      },
      "personalDietaryManagement" : {
        "required" : [ "active", "desirableAmount", "dietaryManagement_id", "maxAmount", "patientId", "personalDietaryManagement_id" ],
        "type" : "object",
        "properties" : {
          "personalDietaryManagement_id" : {
            "type" : "integer"
          },
          "maxAmount" : {
            "type" : "string"
          },
          "patientId" : {
            "type" : "integer"
          },
          "dietaryManagement_id" : {
            "type" : "integer"
          },
          "active" : {
            "type" : "boolean"
          },
          "desirableAmount" : {
            "type" : "string"
          }
        }
      },
      "DietaryManagement" : {
        "required" : [ "description", "dietaryManagement_id" ],
        "type" : "object",
        "properties" : {
          "dietaryManagement_id" : {
            "type" : "integer"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "waterConsumption" : {
        "required" : [ "amount", "date", "patientId", "water_id" ],
        "type" : "object",
        "properties" : {
          "water_id" : {
            "type" : "integer"
          },
          "date" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "string"
          },
          "patientId" : {
            "type" : "integer"
          }
        }
      },
      "food" : {
        "required" : [ "foodName" ],
        "type" : "array",
        "example" : [ {
          "foodId" : 3307,
          "foodName" : "Aardappel"
        }, {
          "foodId" : 3308,
          "foodName" : "Aardbei"
        } ],
        "items" : {
          "$ref" : "#/components/schemas/food_inner"
        }
      },
      "addingfood" : {
        "required" : [ "amount", "date", "diaryId", "foodConsumptionId" ],
        "type" : "object",
        "properties" : {
          "foodId" : {
            "type" : "integer",
            "example" : 4334
          },
          "diaryId" : {
            "type" : "integer",
            "example" : 742
          },
          "amount" : {
            "type" : "integer",
            "example" : 200
          },
          "date" : {
            "type" : "string",
            "example" : "2018-06-13"
          }
        }
      },
      "foodConsumption" : {
        "required" : [ "amount", "calcium", "date", "diaryId", "fiber", "foodConsumptionId", "foodName", "kcal", "protein", "sodium" ],
        "type" : "object",
        "properties" : {
          "food_id" : {
            "type" : "integer"
          },
          "diary_id" : {
            "type" : "integer"
          },
          "foodName" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string"
          },
          "kcal" : {
            "type" : "string"
          },
          "protein" : {
            "type" : "string"
          },
          "fiber" : {
            "type" : "string"
          },
          "calcium" : {
            "type" : "string"
          },
          "sodium" : {
            "type" : "string"
          }
        },
        "example" : {
          "date" : "date",
          "kcal" : "kcal",
          "sodium" : "sodium",
          "foodName" : "foodName",
          "amount" : "amount",
          "fiber" : "fiber",
          "calcium" : "calcium",
          "protein" : "protein",
          "food_id" : 0,
          "diary_id" : 6
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "johndoe@mail.com"
          },
          "password" : {
            "type" : "string",
            "example" : "supersecretpassword1"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "AuthToken" : {
            "type" : "string",
            "example" : "1-4343-47637-43764383-4637673"
          }
        },
        "example" : {
          "AuthToken" : "1-4343-47637-43764383-4637673"
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "johndoe@mail.com"
          },
          "password" : {
            "type" : "string",
            "example" : "supersecretpassword1"
          },
          "name" : {
            "type" : "string",
            "example" : "benito franco"
          }
        }
      },
      "body_2" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "example" : "johndoe@mail.com"
          },
          "password" : {
            "type" : "string",
            "example" : "supersecretpassword"
          }
        }
      },
      "body_3" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "example" : "supersecretpassword2"
          }
        }
      },
      "food_inner" : {
        "type" : "object",
        "properties" : {
          "foodId" : {
            "type" : "integer"
          },
          "foodName" : {
            "type" : "string"
          }
        }
      }
    },
    "responses" : {
      "NotFound" : {
        "description" : "Not found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters" : {
      "endDate" : {
        "name" : "endDate",
        "in" : "query",
        "description" : "the end of a period",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "example" : "2019-09-30"
        }
      },
      "beginDate" : {
        "name" : "beginDate",
        "in" : "query",
        "description" : "the beginning of a period",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "example" : "2019-08-30"
        }
      },
      "patientId" : {
        "name" : "patientId",
        "in" : "path",
        "description" : "The id of the patient",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      },
      "date" : {
        "name" : "date",
        "in" : "path",
        "description" : "A date value.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "example" : "2019-08-30"
        }
      },
      "DietId" : {
        "name" : "DietId",
        "in" : "path",
        "description" : "the id of the diet",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      },
      "doctorId" : {
        "name" : "doctorId",
        "in" : "path",
        "description" : "the id of the doctor",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      }
    },
    "requestBodies" : {
      "dietarymanagment" : {
        "description" : "the diet management that needs to be updated",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/updatedDietmangement"
            }
          }
        },
        "required" : true
      },
      "WaterConsumption" : {
        "description" : "the water consumption of that day",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/waterConsumption"
            }
          }
        },
        "required" : true
      },
      "Addfood" : {
        "description" : "Add the amount of a specific food Item to the diary",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/addingfood"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "oAuth2" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://domain.test/api/oauth/dialog",
            "scopes" : {
              "read" : "example read scope",
              "patient" : "Only patients",
              "doctor" : "Only Doctors",
              "admin" : "Only for administrators",
              "write" : "example write scope"
            }
          }
        }
      }
    }
  }
}
