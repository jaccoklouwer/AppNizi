/*
 * App Nizi API
 *
 * The API for the Nizi-app
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TestApiController : ControllerBase
    { 
        /// <summary>
        /// test call
        /// </summary>
        /// <remarks>Calling this allows you to fetch the test data</remarks>
        /// <response code="200">the test data</response>
        /// <response code="400">bad input parameter</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//test")]
        [ValidateModelState]
        [SwaggerOperation("TestCall")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<TestObject>), description: "the test data")]
        public virtual IActionResult TestCall()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<TestObject>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            exampleJson = "[ {\n  \"description\" : \"This is object number X\",\n  \"id\" : 0\n}, {\n  \"description\" : \"This is object number X\",\n  \"id\" : 0\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<TestObject>>(exampleJson)
                        : default(List<TestObject>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
