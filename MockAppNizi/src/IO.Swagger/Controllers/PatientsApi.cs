/*
 * App Nizi API
 *
 * The API for the Nizi-app
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PatientsApiController : ControllerBase
    { 
        /// <summary>
        /// Deletes a patient
        /// </summary>
        /// <remarks>Delete an existing patient.</remarks>
        /// <param name="patientId">The id of the patient</param>
        /// <response code="200">(200) Removed!</response>
        [HttpDelete]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/{patientId}")]
        [ValidateModelState]
        [SwaggerOperation("DeletePatient")]
        public virtual IActionResult DeletePatient([FromRoute][Required]int? patientId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Returns the user&#x27;s diary for a given date
        /// </summary>
        /// <remarks>Retrieve the user-patient&#x27;s diary for a given date.</remarks>
        /// <param name="date">A date value.</param>
        /// <response code="200">OK</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/me/diary/{date}")]
        [ValidateModelState]
        [SwaggerOperation("GetDiaryForDate")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Diary>), description: "OK")]
        public virtual IActionResult GetDiaryForDate([FromRoute][Required]string date)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Diary>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n}, {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Diary>>(exampleJson)
                        : default(List<Diary>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns a patient&#x27;s diary for a given date
        /// </summary>
        /// <remarks>Retrieve a given patient&#x27;s diary for a given date.</remarks>
        /// <param name="date">A date value.</param>
        /// <param name="patientId">The id of the patient</param>
        /// <response code="200">OK</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/{patientId}/diary/{date}")]
        [ValidateModelState]
        [SwaggerOperation("GetDiaryForDateByPatientId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Diary>), description: "OK")]
        public virtual IActionResult GetDiaryForDateByPatientId([FromRoute][Required]string date, [FromRoute][Required]int? patientId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Diary>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n}, {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Diary>>(exampleJson)
                        : default(List<Diary>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns the user&#x27;s diary from today
        /// </summary>
        /// <remarks>Retrieve the user-patient&#x27;s diary for today.</remarks>
        /// <response code="200">OK</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/me/diary/today")]
        [ValidateModelState]
        [SwaggerOperation("GetDiaryForToday")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Diary>), description: "OK")]
        public virtual IActionResult GetDiaryForToday()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Diary>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n}, {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Diary>>(exampleJson)
                        : default(List<Diary>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns a patient&#x27;s diary from today
        /// </summary>
        /// <remarks>Retrieve a given patient&#x27;s diary for today.</remarks>
        /// <param name="patientId">The id of the patient</param>
        /// <response code="200">OK</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/{patientId}/diary/today")]
        [ValidateModelState]
        [SwaggerOperation("GetDiaryForTodayByPatientId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Diary>), description: "OK")]
        public virtual IActionResult GetDiaryForTodayByPatientId([FromRoute][Required]int? patientId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Diary>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n}, {\n  \"patientId\" : 4334,\n  \"diaryId\" : 4334,\n  \"consumedfoods\" : [ {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  }, {\n    \"date\" : \"date\",\n    \"kcal\" : \"kcal\",\n    \"sodium\" : \"sodium\",\n    \"foodName\" : \"foodName\",\n    \"amount\" : \"amount\",\n    \"fiber\" : \"fiber\",\n    \"calcium\" : \"calcium\",\n    \"protein\" : \"protein\",\n    \"food_id\" : 0,\n    \"diary_id\" : 6\n  } ],\n  \"representingDate\" : \"2019-08-30\"\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Diary>>(exampleJson)
                        : default(List<Diary>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns users&#x27;s patient
        /// </summary>
        /// <remarks>Retrieve the current user&#x27;s patient data.</remarks>
        /// <response code="200">(200) Success.</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/me")]
        [ValidateModelState]
        [SwaggerOperation("GetMyPatient")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Patient>), description: "(200) Success.")]
        public virtual IActionResult GetMyPatient()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Patient>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"birthdate\" : \"2019-08-30\",\n  \"patientId\" : 4334,\n  \"doctorId\" : 123,\n  \"weight\" : [ {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  }, {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  } ]\n}, {\n  \"birthdate\" : \"2019-08-30\",\n  \"patientId\" : 4334,\n  \"doctorId\" : 123,\n  \"weight\" : [ {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  }, {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Patient>>(exampleJson)
                        : default(List<Patient>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns patient with id
        /// </summary>
        /// <remarks>Retrieve an existing patient.</remarks>
        /// <param name="patientId">The id of the patient</param>
        /// <response code="200">OK</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/{patientId}")]
        [ValidateModelState]
        [SwaggerOperation("GetPatientByPatientId")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Patient>), description: "OK")]
        public virtual IActionResult GetPatientByPatientId([FromRoute][Required]int? patientId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Patient>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"birthdate\" : \"2019-08-30\",\n  \"patientId\" : 4334,\n  \"doctorId\" : 123,\n  \"weight\" : [ {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  }, {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  } ]\n}, {\n  \"birthdate\" : \"2019-08-30\",\n  \"patientId\" : 4334,\n  \"doctorId\" : 123,\n  \"weight\" : [ {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  }, {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Patient>>(exampleJson)
                        : default(List<Patient>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Returns patients
        /// </summary>
        /// <remarks>Retrieve an array of patients.</remarks>
        /// <response code="200">OK</response>
        /// <response code="400">(400) Bad request. Data malformed?</response>
        /// <response code="401">(401) Not authorized.</response>
        /// <response code="404">(404) Resource not found.</response>
        [HttpGet]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients")]
        [ValidateModelState]
        [SwaggerOperation("GetPatients")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Patients>), description: "OK")]
        public virtual IActionResult GetPatients()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Patients>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "[ {\n  \"nextId\" : 4005,\n  \"results\" : [ {\n    \"birthdate\" : \"2019-08-30\",\n    \"patientId\" : 4334,\n    \"doctorId\" : 123,\n    \"weight\" : [ {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    }, {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    } ]\n  }, {\n    \"birthdate\" : \"2019-08-30\",\n    \"patientId\" : 4334,\n    \"doctorId\" : 123,\n    \"weight\" : [ {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    }, {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    } ]\n  } ]\n}, {\n  \"nextId\" : 4005,\n  \"results\" : [ {\n    \"birthdate\" : \"2019-08-30\",\n    \"patientId\" : 4334,\n    \"doctorId\" : 123,\n    \"weight\" : [ {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    }, {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    } ]\n  }, {\n    \"birthdate\" : \"2019-08-30\",\n    \"patientId\" : 4334,\n    \"doctorId\" : 123,\n    \"weight\" : [ {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    }, {\n      \"amount\" : \"83.50\",\n      \"unit\" : \"kg\"\n    } ]\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Patients>>(exampleJson)
                        : default(List<Patients>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Patches a patient
        /// </summary>
        /// <remarks>Patch an existing patient.</remarks>
        /// <param name="patientId">The id of the patient</param>
        /// <response code="200">(200) Updated!</response>
        [HttpPatch]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients/{patientId}")]
        [ValidateModelState]
        [SwaggerOperation("PatchPatient")]
        public virtual IActionResult PatchPatient([FromRoute][Required]int? patientId)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Creates a patient
        /// </summary>
        /// <remarks>Create a new patient.</remarks>
        /// <param name="body"></param>
        /// <response code="200">(200) OK!</response>
        [HttpPost]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//patients")]
        [ValidateModelState]
        [SwaggerOperation("PostPatient")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Patient>), description: "(200) OK!")]
        public virtual IActionResult PostPatient([FromBody]List<Patient> body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Patient>));
            string exampleJson = null;
            exampleJson = "[ {\n  \"birthdate\" : \"2019-08-30\",\n  \"patientId\" : 4334,\n  \"doctorId\" : 123,\n  \"weight\" : [ {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  }, {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  } ]\n}, {\n  \"birthdate\" : \"2019-08-30\",\n  \"patientId\" : 4334,\n  \"doctorId\" : 123,\n  \"weight\" : [ {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  }, {\n    \"amount\" : \"83.50\",\n    \"unit\" : \"kg\"\n  } ]\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<Patient>>(exampleJson)
                        : default(List<Patient>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
