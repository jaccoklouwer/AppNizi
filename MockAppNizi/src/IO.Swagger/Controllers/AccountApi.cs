/*
 * App Nizi API
 *
 * The API for the Nizi-app
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AccountApiController : ControllerBase
    { 
        /// <summary>
        /// Logs user in
        /// </summary>
        /// <remarks>Logs user in.</remarks>
        /// <param name="body"></param>
        /// <response code="200">User login finished</response>
        /// <response code="401">not authorized to login? maybe you made a typo?</response>
        [HttpPost]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//account/login")]
        [ValidateModelState]
        [SwaggerOperation("Login")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "User login finished")]
        public virtual IActionResult Login([FromBody]Body body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(InlineResponse200));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\n  \"AuthToken\" : \"1-4343-47637-43764383-4637673\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<InlineResponse200>(exampleJson)
                        : default(InlineResponse200);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Sets a patient&#x27;s password
        /// </summary>
        /// <remarks>Sets the patient&#x27;s new password.</remarks>
        /// <param name="body"></param>
        /// <response code="200">patient updated</response>
        /// <response code="401">not authorized to login</response>
        [HttpPut]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//account/updatepatient")]
        [ValidateModelState]
        [SwaggerOperation("PutPassword")]
        public virtual IActionResult PutPassword([FromBody]Body3 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Registers a patient
        /// </summary>
        /// <remarks>Registers a new patient.</remarks>
        /// <param name="body"></param>
        /// <response code="200">patient registered and ready to party</response>
        /// <response code="401">not authorized to register a patient(are you logged in as a doctor?)</response>
        [HttpPost]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//account/registerpatient")]
        [ValidateModelState]
        [SwaggerOperation("Register")]
        public virtual IActionResult Register([FromBody]Body1 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Registers a doctor
        /// </summary>
        /// <remarks>Registers a new doctor.</remarks>
        /// <param name="body"></param>
        /// <response code="200">doctor registered</response>
        /// <response code="401">not authorized to register a doctor</response>
        [HttpPost]
        [Route("/McSmoker/NierZiektenConcept/1.0.0//account/registerDoctor")]
        [ValidateModelState]
        [SwaggerOperation("RegisterDoctor")]
        public virtual IActionResult RegisterDoctor([FromBody]Body2 body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            throw new NotImplementedException();
        }
    }
}
